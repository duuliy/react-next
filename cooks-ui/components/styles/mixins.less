@import "./themes.less";
@import "./animation.less";

.clearfix() {
  zoom: 1;

  &::before,
  &::after {
    display: table;
    content: '';
  }

  &::after {
    clear: both;
  }
}

.flex-center(@justify: center, @align: center) {
  display: flex;
  justify-content: @justify;
  align-items: @align;
}

.iconfont-mixin() {
  display: inline-block;
  color: @icon-color;
  font-style: normal;
  line-height: 0;
  text-align: center;
  text-transform: none;
  vertical-align: -0.125em; // for SVG icon, see https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  >* {
    line-height: 1;
  }

  svg {
    display: inline-block;
  }

  &::before {
    display: none; // dont display old icon.
  }

  & &-icon {
    display: block;
  }
}

// == when hoverd
.hover(@color: @input-hover-border-color) {
  border-color: @color;
  border-right-width: @border-width-base  !important;
}

.btn {
  background-color: white;
  min-width: @button-default-width;
  height: @button-default-height;
  line-height: 100%;
  font-size: @button-default-font-size;
  padding: @button-default-padding;
  border: 1px solid @default-color;
  cursor: pointer;
  text-align: center;
  overflow: hidden;
  position: relative;
  transition: .3s;
  border-radius: 5px;

  :after {
    content: '';
    position: absolute;
    width: 100%;
    padding-top: 100%;
    background: transparent;
    border-radius: 50%;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%)
  }

  :hover {
    opacity: @button-disabled-opacity;
  }

  :active:after {
    animation: ripple .3s;
  }
}


.reset-component() {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: @text-color;
  font-size: @font-size-base;
  font-variant: @font-variant-base;
  line-height: @line-height-base;
  list-style: none;
  font-feature-settings: @font-feature-settings-base;
}

// Placeholder text
.placeholder(@color: @input-placeholder-color) {

  // Firefox
  &::-moz-placeholder {
    color: @color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }

  // Internet Explorer 10+
  &:-ms-input-placeholder {
    color: @color;
  }

  // Safari and Chrome
  &::-webkit-input-placeholder {
    color: @color;
  }

  &:placeholder-shown {
    text-overflow: ellipsis;
  }
}

// == when hoverd
.hover(@color: @input-hover-border-color) {
  border-color: @color;
  border-right-width: @border-width-base  !important;
}

// input status
// == when focus or actived
.active(@color: @outline-color) {
  border-color: rgba(0, 0, 0, .3);
  border-right-width: @border-width-base  !important;
  outline: 0;
  box-shadow: @input-outline-offset @outline-blur-size @outline-width fade(@color, 20%);
}

.disabled() {
  color: @disabled-color;
  background-color: @input-disabled-bg;
  cursor: not-allowed;
  opacity: 1;

  &:hover {
    .hover(@input-border-color);
  }
}


.input() {
  position: relative;
  display: inline-block;
  width: 100%;
  height: @input-height-base;
  padding: @input-padding-vertical-base @input-padding-horizontal-base;
  color: @input-color;
  font-size: @font-size-base;
  line-height: @line-height-base;
  background-color: @input-bg;
  background-image: none;
  border: @border-width-base @border-style-base @input-border-color;
  border-radius: @border-radius-base;
  transition: all 0.3s;
  .placeholder();

  &:hover {
    .hover();
  }

  &:focus {
    .active();
  }

  &-disabled {
    .disabled();
  }

  &[disabled] {
    .disabled();
  }

  // Reset height for `textarea`s
  textarea& {
    max-width: 100%; // prevent textearea resize from coming out of its container
    height: auto;
    min-height: @input-height-base;
    line-height: @line-height-base;
    vertical-align: bottom;
    transition: all 0.3s, height 0s;
  }

}


.make-grid-columns(@n) when (@n <=@grid-columns) {
  &-@{n} {
    width: @n / @grid-columns * @grid-row-width;
  }

  &-offset-@{n} {
    margin-left: @n / @grid-columns * @grid-row-width;
  }

  .make-grid-columns(@n + 1);
}

// for iconfont font size
// fix chrome 12px bug, support ie
.iconfont-size-under-12px(@size, @rotate: 0deg) {
  display: inline-block;
  @font-scale: unit(@size / 12px);

  font-size: 12px;
  // IE9
  font-size:~'@{size} \9';
  transform: scale(@font-scale) rotate(@rotate);

  :root & {
    font-size: @font-size-sm; // reset IE9 and above
  }
}

.input-sm() {
  height: @input-height-sm;
}